# This is a basic workflow to help you get started with Actions

name: Build & Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push tag events
  push:
    tags:
      - v*

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  createrelease:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      
      - name: Save release URL file for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt
  
  build:
    name: Build
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: >
              pyinstaller --onefile --hidden-import=pynput.keyboard._xorg --hidden-import=pynput.mouse._xorg --add-data="sound:sound" keyboard.py &&
              cd dist/ &&
              zip vmk-linux.zip keyboard
            OUT_FILE_NAME: vmk-linux.zip
            ASSET_MIME: application/zip

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Build with pyinstaller for ${{ matrix.TARGET }}
        run: ${{ matrix.CMD_BUILD }}
      
      - name: Load release URL file from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Get release file name & upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Update release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME }}
          asset_name: ${{ matrix.OUT_FILE_NAME }}
          asset_content_type: ${{ matrix.ASSET_MIME }}
